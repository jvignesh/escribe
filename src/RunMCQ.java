/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
//package finalpro;
import java.awt.event.KeyAdapter;
import java.sql.*;
import java.util.Timer;

import javax.swing.*;

//import com.sun.speech.freetts.*;
/**
 *
 * @author 
 */

public class RunMCQ extends EScribe {
	private static String[] ques;
	private static String[] aans;
	private static String[] bans;
	private static String[] cans;
	private static String[] dans;
	private static int[] anss;
	private static int[] ans;
	private static int i = 0, total=0;
	private static ResultSet rs;
    private static String user;
    private static String query;
    private static int numQ;
    private static final JFrame jf = new JFrame();
	public static byte[] voiceQues[];
	public static byte[] voiceAns[];
//    private static TimeAlert ta;
    private static KeyAdapter ka;
    /**
     * Creates new form ModOne
     */
    public static void main(String[] args) {
    	// This main is only for testing purpose
    	RunMCQ mcq = new RunMCQ("vignesh");
    }

    public RunMCQ(String user) {
    	this.user = user;
    	
        initComponents();
        try {
        	
        	voiceQues = RetriveQA.getQuesData();
        	voiceAns = RetriveQA.getAnsData();
        	
            query = "SELECT NUM FROM Num_Of_Ques WHERE TEST_TYPE = 'MCQ'";
            rs = s.executeQuery(query);
            while(rs.next())
            	numQ = rs.getInt(1);
            ques = new String[numQ];
            aans = new String[numQ];
            bans = new String[numQ];
            cans = new String[numQ];
            dans = new String[numQ];
            anss = new int[numQ];
            ans = new int[numQ];
            
            int z;
            for (z = 0; z < numQ; z++) {
                String q = "select * from questions where sno='" + z + "'";
                s.executeQuery(q);
                rs = s.getResultSet();
                while (rs.next()) {
                    //System.out.println(rs.getString(1) + "\t" + rs.getString(2) + "\t" + rs.getString(3) + "\t" + rs.getString(4) + "\t" + rs.getString(5) + "\t" + rs.getString(6));
                    ques[z] = rs.getString(2);
                    aans[z] = rs.getString(3);
                    bans[z] = rs.getString(4);
                    cans[z] = rs.getString(5);
                    dans[z] = rs.getString(6);
                }
            }

            for (z = 0; z < numQ; z++) {
                String q = "select * from ans where sno='" + z + "'";
                s.executeQuery(q);
                rs = s.getResultSet();
                while (rs.next()) {
                    anss[z] = Integer.parseInt(rs.getString(2));
                }
            }
            jLabel1.setText(ques[0]);
            jLabel2.setText(aans[0]);
            jLabel3.setText(bans[0]);
            jLabel4.setText(cans[0]);
            jLabel5.setText(dans[0]);
            jLabel6.setText("X");
            
        } catch (Exception e) {
            System.out.println(e);
            e.printStackTrace();
        }

//        ta = new TimeAlert(super.mcqMaxTime);
        this.run();
    }

    private static void readInstructions() {
		String instructions = "Instructions for module one. Press F1 key to play the question, F2 to play the Answers and the keys F5 through F8 are for selecting the options. Press F11 for help, F12 for time alert and space bar to complete the test";
//		voice.speak(instructions);		
		PlayMedia.speak(EScribe.audioData[1]);
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jf.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        ka = new KeyAdapter () {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ke(evt);
            }
        };
        jf.addKeyListener(ka);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("jLabel3");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("jLabel4");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("jLabel5");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(jf.getContentPane());
        jf.getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(107, 107, 107))
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel6)))
                .addGap(41, 41, 41)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(28, 28, 28)
                .addComponent(jLabel4)
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addContainerGap(400, Short.MAX_VALUE))
        );

        jf.pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ke(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ke
        // TODO add your handling code here:
        if (evt.getKeyCode() == 112) {
        	PlayMedia.speak(voiceQues[i]);
            //voice.speak("Question Number" + (i + 1) + ques[i]);
        }
        else if (evt.getKeyCode() == 113) {
        	PlayMedia.speak(voiceAns[i]);
//            voice.speak("Option A " + aans[i]);
//            voice.speak("Option B " + bans[i]);
//            voice.speak("Option C " + cans[i]);
//            voice.speak("Option D " + dans[i]);
        }
        else if (evt.getKeyCode() == 116) {
            ans[i] = 1;
            jLabel6.setText("A");
//            voice.speak("Option A" + aans[i] + " is selected");
            PlayMedia.speak(EScribe.audioData[9]);
        }

        else if (evt.getKeyCode() == 117) {
            ans[i] = 2;
            jLabel6.setText("B");
            PlayMedia.speak(EScribe.audioData[10]);
//            voice.speak("Option B" + bans[i] + "is selected");
        }
        else if (evt.getKeyCode() == 118) {
            ans[i] = 3;
            jLabel6.setText("C");
            PlayMedia.speak(EScribe.audioData[11]);
//            voice.speak("Option C" + cans[i] + " is selected");
        }
        else if (evt.getKeyCode() == 119) {
            ans[i] = 4;
            jLabel6.setText("D");
            PlayMedia.speak(EScribe.audioData[12]);
//            voice.speak("Option D" + dans[i] + " is selected");
        }
        else if(evt.getKeyCode()==37)
        {
            if (i != 0) {
                --i;
                jLabel1.setText(ques[i]);
                jLabel2.setText(aans[i]);
                jLabel3.setText(bans[i]);
                jLabel4.setText(cans[i]);
               jLabel5.setText(dans[i]);
            }
        }
        else if(evt.getKeyCode()==39)
        {
            if (i != numQ-1) {
                ++i;
                jLabel1.setText(ques[i]);
                jLabel2.setText(aans[i]);
                jLabel3.setText(bans[i]);
                jLabel4.setText(cans[i]);
                jLabel5.setText(dans[i]);
            }
        }
        else if (evt.getKeyCode() == 32) {
        	complete();
        }
        else if (evt.getKeyCode() == 122) {
        	readInstructions();
        }
        else if(evt.getKeyCode() == 123) {

        	//Add the warning class here...
//        	voice.speak("You have " + ta.getMS()/60000 + " minutes remaining.");
        }
        	
    }//GEN-LAST:event_ke

    /**
     * @param args the command line arguments
     */
    public void run() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RunMCQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RunMCQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RunMCQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RunMCQ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jf.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
    
    public void complete() {
        total = 0;
        for (int k = 0; k < numQ; k++) {
            if (ans[k] == anss[k]) {
                total++;
            }
        }
        try {
            String q = "update users set mark='" + total + "'where user='" + user + "'";
            s.execute(q);
        } catch (Exception e) {
        System.out.println(e);
        }
        String mod2 = "You have completed module one and your score has been recorded. Now press F1 to listen to the instructions of module 2 or F2 to proceed with module two.";
        final String instructions = "Here comes the instructions for module 2";
        PlayMedia.speak(EScribe.audioData[4]);
        //voice.speak(mod2);
        jf.removeKeyListener(ka);
        ka = new KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
            	if(evt.getKeyCode() == 112) {
            		
            		//See whatever comes here and replace it with the corresponding number for "i" below
            		//PlayMedia.speak(EScribe.audioData[i]);
            		//voice.speak(instructions);
            	}
            	else if(evt.getKeyCode() == 113)
            	{
    				Runtime.getRuntime().gc();
            		//voice.speak("Your time for module two starts now.");
            		//See whatever comes here and replace it with the corresponding number for "i" below
            		//PlayMedia.speak(EScribe.audioData[i]);
    				
    				Timer t = new Timer();
//    				final RunMCQ mcq = new RunMCQ(user);
  //  				t.schedule(new Warning(voice), mcqMaxTime - FIVE_MIN);
    //				t.schedule(new FinishTest(voice, mcq), mcqMaxTime);
                    jf.dispose();
            	};
            }
        };
        jf.addKeyListener(ka);
    }
}
